version: '3'
services:
  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile.tests
    environment:
      - HOST=frontend
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://frontend:3000/ || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
  
  backend:
    build:
      context: backend/
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://127.0.0.1:8000/api/consultant/ || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5

  db:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 1s
      retries: 5

  robo:
    build: 
      context: tests/
      dockerfile: Dockerfile
      args:
        - IMAGE=${ROBOT_IMAGE}
    depends_on:
      frontend:
        condition: service_healthy